parameters:
  - name: secretNames
    type: object
    default: []
  - name: secretNames2
    type: object
    default: []

steps:

  - powershell: |
      $secretArr=@();
      $envs = Get-ChildItem env:* | sort-object name
      Foreach ($env in $envs) { 
        $name=$env.Name 
        $value=$env.Value
        Write-Host "name: $name"
        Write-Host "value: $value"
        if ($name -like "tf_secret_*"){
          Write-Host "adding: $name"
          Write-Host ""
          echo "##vso[task.setvariable variable=$name;isOutput=true]$value"
        }
      }
    name: secretVars
    displayName: Set Secret Variables
    env:
      ${{ each name in parameters.secretNames }}:
        "${{ name }}_set" : "$(${{ name }})"

  - ${{ each sec in parameters.secretNames2 }}:
    - powershell: |
        $secretArr=@();
        $envs = Get-ChildItem env:* | sort-object name
        Foreach ($env in $envs) { 
          $name=$env.Name 
          $value=$env.Value
          Write-Host "name: $name"
          Write-Host "value: $value"
          if ($name -like "tf_secret_*"){
            Write-Host "adding: $name"
            Write-Host ""
            echo "##vso[task.setvariable variable=$name;isOutput=true]$value"
          }
        }
      name: secretVarsqwq
      displayName: Set Secret Variables qwq
      env:
        "${{ sec }}_set" : "$(${{ sec }})"
